"""add documents, sick_leaves, reminders

Revision ID: e81ea845b2af
Revises: 57065dc124a9
Create Date: 2025-10-09 14:58:25.439566

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e81ea845b2af'
down_revision: Union[str, Sequence[str], None] = '57065dc124a9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('documents',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('employee_id', sa.UUID(), nullable=False),
    sa.Column('document_type', sa.String(length=50), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('file_url', sa.Text(), nullable=True),
    sa.Column('is_original_required', sa.Boolean(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'received', 'processed', name='documentstatus'), nullable=False),
    sa.Column('upload_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_documents_employee_id'), 'documents', ['employee_id'], unique=False)
    op.create_index(op.f('ix_documents_id'), 'documents', ['id'], unique=False)
    op.create_table('reminders',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('employee_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('due_at', sa.DateTime(), nullable=True),
    sa.Column('reminder_time', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Text(), nullable=True),
    sa.Column('linked_to', sa.Text(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reminders_due_at'), 'reminders', ['due_at'], unique=False)
    op.create_index(op.f('ix_reminders_employee_id'), 'reminders', ['employee_id'], unique=False)
    op.create_index(op.f('ix_reminders_id'), 'reminders', ['id'], unique=False)
    op.create_table('time_entries',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('employee_id', sa.UUID(), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_time_entries_employee_id'), 'time_entries', ['employee_id'], unique=False)
    op.create_index(op.f('ix_time_entries_id'), 'time_entries', ['id'], unique=False)
    op.create_table('vacation_requests',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('employee_id', sa.UUID(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'approved', 'rejected', name='vacationstatus'), nullable=False),
    sa.Column('representative', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vacation_requests_employee_id'), 'vacation_requests', ['employee_id'], unique=False)
    op.create_index(op.f('ix_vacation_requests_id'), 'vacation_requests', ['id'], unique=False)
    op.create_table('sick_leaves',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('employee_id', sa.UUID(), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sick_leaves_document_id'), 'sick_leaves', ['document_id'], unique=False)
    op.create_index(op.f('ix_sick_leaves_employee_id'), 'sick_leaves', ['employee_id'], unique=False)
    op.create_index(op.f('ix_sick_leaves_id'), 'sick_leaves', ['id'], unique=False)
    op.alter_column('employees', 'name',
               existing_type=sa.VARCHAR(length=120),
               type_=sa.String(length=200),
               existing_nullable=False)
    op.alter_column('employees', 'email',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=320),
               existing_nullable=False)
    op.alter_column('employees', 'employee_id',
               existing_type=sa.VARCHAR(length=32),
               type_=sa.String(length=64),
               existing_nullable=False)
    op.alter_column('employees', 'created',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.alter_column('employees', 'updated',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=False)
    op.drop_constraint(op.f('uq_employees_employee_id'), 'employees', type_='unique')
    op.create_index(op.f('ix_employees_email'), 'employees', ['email'], unique=True)
    op.create_index(op.f('ix_employees_id'), 'employees', ['id'], unique=False)
    op.create_index(op.f('ix_employees_name'), 'employees', ['name'], unique=False)
    op.create_index('ix_employees_name_department', 'employees', ['name', 'department'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_employees_name_department', table_name='employees')
    op.drop_index(op.f('ix_employees_name'), table_name='employees')
    op.drop_index(op.f('ix_employees_id'), table_name='employees')
    op.drop_index(op.f('ix_employees_email'), table_name='employees')
    op.create_unique_constraint(op.f('uq_employees_employee_id'), 'employees', ['employee_id'], postgresql_nulls_not_distinct=False)
    op.alter_column('employees', 'updated',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('employees', 'created',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=False)
    op.alter_column('employees', 'employee_id',
               existing_type=sa.String(length=64),
               type_=sa.VARCHAR(length=32),
               existing_nullable=False)
    op.alter_column('employees', 'email',
               existing_type=sa.String(length=320),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('employees', 'name',
               existing_type=sa.String(length=200),
               type_=sa.VARCHAR(length=120),
               existing_nullable=False)
    op.drop_index(op.f('ix_sick_leaves_id'), table_name='sick_leaves')
    op.drop_index(op.f('ix_sick_leaves_employee_id'), table_name='sick_leaves')
    op.drop_index(op.f('ix_sick_leaves_document_id'), table_name='sick_leaves')
    op.drop_table('sick_leaves')
    op.drop_index(op.f('ix_vacation_requests_id'), table_name='vacation_requests')
    op.drop_index(op.f('ix_vacation_requests_employee_id'), table_name='vacation_requests')
    op.drop_table('vacation_requests')
    op.drop_index(op.f('ix_time_entries_id'), table_name='time_entries')
    op.drop_index(op.f('ix_time_entries_employee_id'), table_name='time_entries')
    op.drop_table('time_entries')
    op.drop_index(op.f('ix_reminders_id'), table_name='reminders')
    op.drop_index(op.f('ix_reminders_employee_id'), table_name='reminders')
    op.drop_index(op.f('ix_reminders_due_at'), table_name='reminders')
    op.drop_table('reminders')
    op.drop_index(op.f('ix_documents_id'), table_name='documents')
    op.drop_index(op.f('ix_documents_employee_id'), table_name='documents')
    op.drop_table('documents')
    # ### end Alembic commands ###
