name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

# Verhindert parallele doppelte Runs pro Branch
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  backend-tests:
    name: Backend • FastAPI + Alembic + Pytest
    runs-on: ubuntu-latest
    timeout-minutes: 15

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: workmate
          POSTGRES_PASSWORD: workmate
          POSTGRES_DB: workmate
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U workmate -d workmate"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    env:
      DATABASE_URL: postgresql+psycopg2://workmate:workmate@localhost:5432/workmate
      PYTHONUNBUFFERED: "1"
      PYTHONDONTWRITEBYTECODE: "1"
      PYTHONPATH: ${{ github.workspace }}/backend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: backend/requirements.txt

      - name: Install deps
        run: |
          pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest pytest-asyncio httpx requests psycopg2-binary

      - name: Wait for Postgres
        run: |
          python - <<'PY'
          import os, time, psycopg2
          url = os.environ["DATABASE_URL"].replace("+psycopg2","")
          for i in range(120):
              try:
                  psycopg2.connect(url).close()
                  print("DB ready"); break
              except Exception as e:
                  print(f"DB not ready ({i}): {e}")
                  time.sleep(1)
          else:
              raise SystemExit("DB not healthy in time")
          PY

      - name: Alembic upgrade head
        working-directory: backend
        run: alembic upgrade head

      - name: Run tests
        working-directory: backend
        run: pytest -q

  frontend-build:
    name: Frontend • Vite/Vue build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    defaults:
      run:
        working-directory: ui

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: ui/package-lock.json

      - name: Install & Build
        run: |
          npm ci
          npm run build --if-present
