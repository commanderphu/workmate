name: CI
on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:16
        env:
          POSTGRES_DB: workmate
          POSTGRES_USER: workmate
          POSTGRES_PASSWORD: workmate
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U workmate -d workmate"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=10

    env:
      DATABASE_URL: postgresql+psycopg2://workmate:workmate@localhost:5432/workmate
      PYTHONUNBUFFERED: "1"
      PYTHONDONTWRITEBYTECODE: "1"
      PYTHONPATH: backend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: backend/requirements.txt

      - name: Install backend deps
        run: |
          pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest pytest-asyncio httpx

      - name: Wait for DB healthy
        run: |
          for i in {1..20}; do
            pg_isready -h localhost -p 5432 -U workmate -d workmate && break
            sleep 1
          done

      - name: Alembic migrate
        working-directory: backend
        run: alembic upgrade head

      - name: Run tests
        working-directory: backend
        run: pytest -q

  # optional: baue das Dev-Image per Docker Buildx (nur Build, kein Push)
  build-backend-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build dev image (no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: backend/Dockerfile.dev
          push: false
          tags: workmate/backend:dev
