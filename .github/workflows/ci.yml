name: CI (Local Runner)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

# Damit nie mehrere Runs pro Branch gleichzeitig laufen
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  backend-tests:
    name: 🧠 Backend • FastAPI + Alembic + Pytest
    runs-on: [self-hosted, Linux, X64]   # Läuft auf deinem phu-arch Runner
    timeout-minutes: 15

    env:
      DATABASE_URL: postgresql+psycopg2://workmate:workmate@localhost:5432/workmate
      PYTHONUNBUFFERED: "1"
      PYTHONDONTWRITEBYTECODE: "1"
      PYTHONPATH: ${{ github.workspace }}/backend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: backend/requirements.txt

      - name: 📦 Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest pytest-asyncio httpx requests psycopg2-binary

      - name: 🧱 Start Postgres (lokal via Docker)
        run: |
          docker run -d \
            --name workmate-db \
            -e POSTGRES_DB=workmate \
            -e POSTGRES_USER=workmate \
            -e POSTGRES_PASSWORD=workmate \
            -p 5432:5432 \
            postgres:16
          echo "Waiting for Postgres..."
          for i in {1..60}; do
            if docker exec workmate-db pg_isready -U workmate -d workmate > /dev/null 2>&1; then
              echo "Postgres ready"; break
            fi
            sleep 2
          done

      - name: 🔁 Alembic upgrade head
        working-directory: backend
        run: alembic upgrade head

      - name: 🧪 Run tests
        working-directory: backend
        run: pytest -q

      - name: 🧹 Cleanup containers (always)
        if: always()
        run: docker rm -f workmate-db || true

  frontend-build:
    name: 💻 Frontend • Vite/Vue Build
    runs-on: [self-hosted, Linux, X64]
    timeout-minutes: 10
    defaults:
      run:
        working-directory: ui

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 🧩 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: ui/package-lock.json

      - name: 📦 Install & Build
        run: |
          npm ci
          npm run build --if-present
