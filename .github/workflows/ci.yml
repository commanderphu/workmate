name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  backend-tests:
    name: Backend (FastAPI) Tests
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:16
        env:
          POSTGRES_DB: workmate
          POSTGRES_USER: workmate
          POSTGRES_PASSWORD: workmate
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U workmate -d workmate"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=15

    env:
      DATABASE_URL: postgresql+psycopg2://workmate:workmate@localhost:5432/workmate
      PYTHONUNBUFFERED: "1"
      PYTHONDONTWRITEBYTECODE: "1"
      PYTHONPATH: ${{ github.workspace }}/backend   # macht 'app' importierbar

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: backend/requirements.txt

      - name: Install backend deps
        run: |
          pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest pytest-asyncio httpx requests psycopg2-binary

      # Optional: schnelle Diagnose, ob mehrere Heads existieren
      - name: Alembic heads (diagnostic)
        working-directory: backend
        run: |
          echo "=== alembic heads ==="
          alembic heads || true

      - name: Wait for DB
        run: |
          python - <<'PY'
          import os, time, psycopg2
          url = os.environ["DATABASE_URL"].replace("+psycopg2","")
          for i in range(90):
              try:
                  psycopg2.connect(url).close()
                  print("DB ready"); break
              except Exception as e:
                  print(f"DB not ready ({i}): {e}")
                  time.sleep(1)
          else:
              raise SystemExit("DB not healthy in time")
          PY

      - name: Alembic upgrade
        working-directory: backend
        run: |
          alembic upgrade head

      - name: Start FastAPI (background)
        working-directory: backend
        run: |
          nohup uvicorn app.main:app --host 127.0.0.1 --port 8000 --no-access-log > uvicorn.log 2>&1 &

      - name: Wait for /healthz
        run: |
          python - <<'PY'
          import time, urllib.request, sys
          for i in range(90):
              try:
                  with urllib.request.urlopen("http://127.0.0.1:8000/healthz", timeout=1) as r:
                      if r.status == 200:
                          print("API ready"); sys.exit(0)
              except Exception as e:
                  print(f"API not ready ({i}): {e}")
              time.sleep(1)
          raise SystemExit("API not healthy in time")
          PY

      - name: Run tests
        working-directory: backend
        run: pytest -q

      - name: Show server log (always)
        if: always()
        working-directory: backend
        run: |
          echo "==== uvicorn.log ===="
          (test -f uvicorn.log && tail -n +500 uvicorn.log) || echo "no uvicorn.log"

  frontend-build:
    name: Frontend (Vite/Vue) Build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ui

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: ui/package-lock.json

      - name: Install & Build
        run: |
          npm ci
          npm run build
