name: CI (self-hosted)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch: {}

# Nie mehrere gleichzeitige Läufe pro Branch
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  # gemeinsame Defaults
  PYTHONUNBUFFERED: "1"
  PYTHONDONTWRITEBYTECODE: "1"

jobs:
  backend:
    name: 🧠 Backend • FastAPI + Alembic + Pytest
    runs-on: [self-hosted, Linux, X64]
    timeout-minutes: 20

    env:
      DATABASE_URL: postgresql+psycopg2://workmate:workmate@localhost:5432/workmate
      PYTHONPATH: ${{ github.workspace }}/backend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: pip
          cache-dependency-path: backend/requirements.txt

      - name: 📦 Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install pytest pytest-asyncio httpx requests psycopg2-binary

      - name: 🧱 Start Postgres (Docker)
        run: |
          docker rm -f workmate-db 2>/dev/null || true
          docker run -d --name workmate-db \
            -e POSTGRES_DB=workmate \
            -e POSTGRES_USER=workmate \
            -e POSTGRES_PASSWORD=workmate \
            -p 5432:5432 postgres:16
          echo "Waiting for Postgres..."
          for i in {1..90}; do
            docker exec workmate-db pg_isready -U workmate -d workmate >/dev/null 2>&1 && { echo "Postgres ready"; break; }
            sleep 2
          done

      - name: 🔁 Alembic upgrade
        working-directory: backend
        run: alembic upgrade head

      - name: 🧪 Pytest
        working-directory: backend
        run: pytest -q

      - name: 🧹 Cleanup DB (always)
        if: always()
        run: docker rm -f workmate-db || true

  frontend:
    name: 💻 Frontend • Vite/Vue build
    runs-on: [self-hosted, Linux, X64]
    timeout-minutes: 15
    defaults:
      run:
        working-directory: ui

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 🧩 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: ui/package-lock.json

      - name: 📦 Install
        run: npm ci

      - name: 🔧 Type Check (optional)
        run: npx vue-tsc --noEmit

      - name: 🏗️ Build
        run: npm run build

      - name: "📦 Artefakt: dist"
        if: ${{success()}}
        uses: actions/upload-artifact@v4
        with:
          name: ui-dist
          path: ui/dist
          if-no-files-found: error
          retention-days: 7

  done:
    name: ✅ All good
    runs-on: [self-hosted, Linux, X64]
    needs: [backend, frontend]
    steps:
      - run: echo "Backend + Frontend erfolgreich gebaut & getestet 🎉"
