

name: kit_workmate

networks:
  kit_net:

volumes:
  pg_data:

services:
  db:
    image: postgres:16-alpine
    container_name: kit_db
    env_file: ${ENV_FILE:-.env.dev}
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10
    networks:
      - kit_net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: kit_backend
    env_file: ${ENV_FILE:-.env.dev}
    environment:
      - APP_VERSION=${APP_VERSION:-0.1.0}
      - GIT_SHA=${GIT_SHA:-dev}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    volumes:
      - ./backend:/app
    command: >
      sh -c "alembic upgrade head &&
             uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    networks:
      - kit_net
    profiles: ["dev"]
    healthcheck:
      test: ["CMD", "curl","-fsS","http://localhost:8000/api/ready"]
      interval: 20s
      timeout: 3s
      retries: 5
      start_period: 10s

  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    container_name: kit_ui
    environment:
      VITE_API_BASE: ${VITE_API_BASE:-http://localhost:8000}
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    volumes:
      - ./ui:/usr/src/app
      - /usr/src/app/node_modules
    command: ["npm", "run", "dev", "--", "--host"]
    depends_on:
      - backend
    networks:
      - kit_net
    profiles: ["dev"]

  adminer:
    image: adminer
    container_name: kit_adminer
    ports:
      - "8081:8080"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - kit_net
    profiles: ["dev"]
