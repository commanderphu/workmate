name: kit_workmate

networks:
  # 🔄 Dieses Netzwerk wird vom Identity-Stack bereitgestellt
  kit_net:
    external: true
    name: workmate_infra_net

volumes:
  pg_data:
  ui_node_modules:

services:
  # ============================================================
  # 🐘 PostgreSQL
  # ============================================================
  db:
    image: postgres:16-alpine
    container_name: kit_db
    env_file: ${ENV_FILE:-.env.dev}
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped
    networks:
      - kit_net

  # ============================================================
  # ⚙️ FastAPI Backend
  # ============================================================
  backend:
    user: root
    privileged: true
    networks:
      - kit_net
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: kit_backend
    env_file: ${ENV_FILE:-.env.dev}
    environment:
      APP_VERSION: ${APP_VERSION:-0.1.0}
      GIT_SHA: ${GIT_SHA:-dev}
      BACKEND_URL: https://api.workmate.test
      UPLOAD_DIR: /app/uploads
      PYTHONUNBUFFERED: 1
      PYTHONPATH: /app/backend
      UVICORN_RELOAD_DELAY: 0.5
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    volumes:
      - ./backend/app:/app/backend/app
      - ./backend/uploads:/app/uploads
      - ./backend/alembic:/app/backend/alembic
      - ./backend/alembic.ini:/app/backend/alembic.ini
    command: >
      sh -c "
        echo '🚀 Starte Workmate Backend...' &&
        alembic upgrade head &&
        uvicorn app.main:app
          --host 0.0.0.0
          --port 8000
          --reload
          --reload-dir /app/backend/app
          --proxy-headers
          --forwarded-allow-ips='*'
      "
    profiles: ["dev"]
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8000/api/ready"]
      interval: 20s
      timeout: 3s
      retries: 5
      start_period: 10s

  # ============================================================
  # 🎨 Vite + Vue Frontend
  # ============================================================
  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile.dev
    container_name: kit_ui
    networks:
      - kit_net

    env_file: ${ENV_FILE:-.env.dev}
    user: root
    privileged: true
    tty: true
    stdin_open: true
    working_dir: /app
    environment:
      CHOKIDAR_USEPOLLING: 1
      NODE_ENV: development
    ports:
      - "${FRONTEND_PORT:-5173}:5173"
    volumes:
      - ./ui:/app
      - ui_node_modules:/app/node_modules
    command: >
      sh -c "
        echo '🎨 Starte Workmate UI auf http://localhost:5173' &&
        pnpm dev --host 0.0.0.0 --port 5173
      "
    depends_on:
      backend:
        condition: service_healthy
    profiles: ["dev"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  # ============================================================
  # 🧭 Adminer (DB UI)
  # ============================================================
  adminer:
    image: adminer
    container_name: kit_adminer
    ports:
      - "8081:8080"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - kit_net
    profiles: ["dev"]
